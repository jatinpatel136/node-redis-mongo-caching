apiVersion: apps/v1
kind: Deployment
metadata:
  name:  mongodb
  namespace: default
  labels:
    app:  mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app:  mongodb
    spec:
      containers:
      - name:  mongodb
        image:  mongo
        command:
          - mongod
        ports:
        - containerPort: 27017
        # env:
        # - name: MONGO_INITDB_ROOT_USERNAME
        #   valueFrom:
        #     secretKeyRef:
        #       name: mongodb-secret
        #       key: mongo-root-username
        # - name: MONGO_INITDB_ROOT_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       key: mongo-root-password
        #       name: mongodb-secret
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: default
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        # data volume where redis writes data
      #   volumeMounts:
      #   - name: data
      #     mountPath: /data
      #     readOnly: false
      # volumes:
      # - name: data
      #   persistentVolumeClaim:
      #     claimName: redis-data
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis